1：为什么要方法重写？
    子类在继承父类之后，就获取了父类所有的方法。但父类的方法可能不太适合子类。
        子类要对继承过来的方法进行覆盖、重写的操作。
        class  Account{
        public void withDraw(){
        //判断balance余额是否够atm取钱的额度
        }

                }
                class CheckAccount extends Account{
                double protectedBy;
                public void withDraw(){
                // 判断balance余额是否够atm取钱的额度
                // 如果不够，可从protectedBy区。
                }
                }
2:什么是方法的重写？
    子类对于父类继承过来的方法进行的覆写、覆盖的操作，就称为方法的覆写。
3：重写的规则？
    方法的声明：
        权限修饰符   返回值类型  方法名（形参列表）{//方法体}
        ①：父类被重写的方法，与子类重写的方法的方法名和形参列表，必须一致。这样编译器才知道到底要覆盖那个方法。
        ②：子类重写的方法的方法的权限修饰符不小于父类的权限修饰符。
            -子类不能重写父类中声明的private旋权限修饰的方法。
        ③：返回值类型：
            >父类被重写的方法返回值类型是void，则子类重写的方法的返回值类型必须是void。
            >父类被重写的方法返回值类型是基本数据类型，则子类重写的方法的返回值类型必须与被重写的方法的返回值类型相同。
            >父类被重写的方法返回值类型是引用数据类型（比如类），则子类重写的方法的返回值类型可以与被重写的方法的返回值
             类型相同  或 是被重写的方法的返回值类型的子类。
        ④：方法体：没有要求  子类重写的方法的方法体必然与父类被重写的方法体不同。


