2：abstract的概念：抽象的

3：abstract可以用来修饰：类  方法

4：具体的使用
    4.1：abstract修饰类：
        >抽象类
        >抽象类不能被实例化。
        >抽象类是包含构造器的，因为子类对象实例化时需要直接或间接的调用父类的构造器。
        >抽象类中可以没有抽象方法，但是抽象方法所在的类一定是抽象类。
    4.2：abstract修饰方法：
        >抽象方法
        >抽象方法只有方法的声明，没有方法体。
        >抽象方法其功能是确定的，通过方法的声明即可确定，只是不知道如何具体实现。(体现没有方法体)
        >子类必须重写父类中的所有的抽象方法之后，才能实例化，否则此子类仍是一个抽象类。
5：abstract不能使用的场景
    5.1：abstract不能修饰那些结构？
        >属性   构造器  代码块
    3.2：abstract不能与那些关键字共用？
        >私有方法   私有方法不能被重写
        >静态方法   静态方法可以通过类来调用，但是抽象方法不能被类调用。
        >final方法 明确不能被重写   abstract方法一定会被重写
        >final类  final类不能有子类，而abstract一定有子类。