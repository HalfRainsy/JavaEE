1：继承性的理解
    生活层面：财产上的继承
    代码层面：自上而下：定义A类，在定义一个B，发现B的功能与A相似，那么此时可以考虑让B继承A 关键词：extends
            自下而上：定义了类B，C，D等类，发现B，C，D有一些共性，则可以考虑将相同的属性和方法抽取出来，放在类A中，让B，C，D继承类A，同时B，C，D
            他们当中的相似功能就可以删除了。
    继承的出现，为类提供了 is_a 的关系，不能为了继承而继承。就像“猫”不能继承“狗”的类一样。“猫狗”应该继承“动物”类。可以理解为“猫”“狗”是一个动物。
2：继承的好处：
    -继承的出现减少了代码的冗余，提高了代码的复用性。
    -继承的出现，更有利于功能的扩展。
    -继承的出现，让类与类产生了 is a 的关系，为多态的使用提供了前提。
    -继承描述书屋之间的所属关系，这种关系是 ‘is a’的关系。课件，服类更通用、更一般，子类更具体。
3：继承的格式：
    类A：superClass   父类    超类    基类
    类B：subClass    子类    派生类


    class A {
    //属性  方法
    }
    class B extends A{//B继承了A

    }
4：有了继承性以后
    -子类就获取到了父类所声明的属性和方法。
        如果父类有private属性的私有属性，是不能匹配到私有属性。私有属性是被继承到了，但是不能用。
        由于封装性的影响，可能子类不能直接调用父类的所有的属性和方法。
    -子类在继承父类之后，还可以增加自己新的特有的属性或方法。
        extends---延展 扩展  延申
    -子类和父类的理解，要区别于集合和子集。
        两个区别：集合的东西多，子集的东西少。而继承则是，父类的东西少，子类的东西多。这两个是相反的。
    -不要为了继承而继承，继承前要去判断是否有”Is  a“的关系。
5：默认的父类
    Java中声明的类，如果没有显示其声明的父类，则默认继承java.lang.object.
6：补充说明
    -Object    -Person   -Student
    student 与  object是什么关系？
        多层继承
        - 子类和父类是一种相对的概念
        - 顶层父类是Object类。所有的类默认继承Object，作为父类
    一个父类可以有很多子类，但是一个子类只有一个父类，不能有多个父类。